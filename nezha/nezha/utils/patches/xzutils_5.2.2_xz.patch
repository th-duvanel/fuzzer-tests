diff --git a/src/liblzma/common/block_header_decoder.c b/src/liblzma/common/block_header_decoder.c
index 1dd982f..95b0d8a 100644
--- a/src/liblzma/common/block_header_decoder.c
+++ b/src/liblzma/common/block_header_decoder.c
@@ -68,7 +68,8 @@ lzma_block_header_decode(lzma_block *block,
 
 	// Verify CRC32
 	if (lzma_crc32(in, in_size, 0) != unaligned_read32le(in + in_size))
-		return LZMA_DATA_ERROR;
+        {}
+		//return LZMA_DATA_ERROR;
 
 	// Check for unsupported flags.
 	if (in[1] & 0x3C)
diff --git a/src/liblzma/common/index_decoder.c b/src/liblzma/common/index_decoder.c
index 795d183..ca89b85 100644
--- a/src/liblzma/common/index_decoder.c
+++ b/src/liblzma/common/index_decoder.c
@@ -179,7 +179,8 @@ index_decode(lzma_coder *coder, const lzma_allocator *allocator,
 
 			if (((coder->crc32 >> (coder->pos * 8)) & 0xFF)
 					!= in[(*in_pos)++])
-				return LZMA_DATA_ERROR;
+                {}
+                //return LZMA_DATA_ERROR;
 
 		} while (++coder->pos < 4);
 
diff --git a/src/liblzma/common/index_hash.c b/src/liblzma/common/index_hash.c
index d7a0344..f8737ac 100644
--- a/src/liblzma/common/index_hash.c
+++ b/src/liblzma/common/index_hash.c
@@ -314,7 +314,8 @@ lzma_index_hash_decode(lzma_index_hash *index_hash, const uint8_t *in,
 
 			if (((index_hash->crc32 >> (index_hash->pos * 8))
 					& 0xFF) != in[(*in_pos)++])
-				return LZMA_DATA_ERROR;
+                {}
+				//return LZMA_DATA_ERROR;
 
 		} while (++index_hash->pos < 4);
 
diff --git a/src/liblzma/common/stream_flags_decoder.c b/src/liblzma/common/stream_flags_decoder.c
index 1bc2f97..838aaf6 100644
--- a/src/liblzma/common/stream_flags_decoder.c
+++ b/src/liblzma/common/stream_flags_decoder.c
@@ -40,7 +40,8 @@ lzma_stream_header_decode(lzma_stream_flags *options, const uint8_t *in)
 			LZMA_STREAM_FLAGS_SIZE, 0);
 	if (crc != unaligned_read32le(in + sizeof(lzma_header_magic)
 			+ LZMA_STREAM_FLAGS_SIZE))
-		return LZMA_DATA_ERROR;
+        {}
+		//return LZMA_DATA_ERROR;
 
 	// Stream Flags
 	if (stream_flags_decode(options, in + sizeof(lzma_header_magic)))
@@ -68,7 +69,8 @@ lzma_stream_footer_decode(lzma_stream_flags *options, const uint8_t *in)
 	const uint32_t crc = lzma_crc32(in + sizeof(uint32_t),
 			sizeof(uint32_t) + LZMA_STREAM_FLAGS_SIZE, 0);
 	if (crc != unaligned_read32le(in))
-		return LZMA_DATA_ERROR;
+        {}
+		//return LZMA_DATA_ERROR;
 
 	// Stream Flags
 	if (stream_flags_decode(options, in + sizeof(uint32_t) * 2))
